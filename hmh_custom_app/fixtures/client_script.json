[
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Patient Encounter",
  "enabled": 1,
  "modified": "2024-08-07 11:31:43.391087",
  "module": "HMH CUSTOM APP",
  "name": "Patient Bills",
  "script": "frappe.ui.form.on('Patient Encounter', {\r\n    custom_get_patients_bill: function(frm) {\r\n        update_custom_items_table(frm);\r\n    },\r\n    custom_get_bills: function(frm) {\r\n        update_items_table(frm);\r\n    },\r\n    custom_view_traige: function(frm) {\r\n        viewTriage(frm);\r\n    },\r\n\r\n});\r\n\r\n\r\nfrappe.ui.form.on('Expense Claim Items', {\r\n    amount: function (frm, cdt, cdn) {\r\n        calculateTotalsTransfers(frm);\r\n    }\r\n});\r\nfrappe.ui.form.on('drug_prescription', {\r\n    item_code: function(frm, cdt, cdn) {\r\n        var item = frappe.get_doc(cdt, cdn);\r\n        if (frm.doc.price_list) {\r\n            frappe.model.set_value(cdt, cdn, 'price_list', frm.doc.price_list);\r\n        }\r\n    }\r\n});\r\n\r\nfunction update_custom_items_table(frm) {\r\n    frappe.call({\r\n        method: 'hmh_custom_app.custom_api.patient_encounter.on_submit',\r\n        args: {\r\n            patient_encounter: frm.doc.name\r\n        },\r\n        callback: function(r) {\r\n            if (r.message.status === 'success') {\r\n                frappe.msgprint(r.message.message);\r\n                // Refresh the custom_items table to reflect the changes\r\n                frm.refresh_field('custom_items');\r\n                // Reload the page\r\n                 location.reload();\r\n            } else {\r\n                frappe.msgprint(__('Error: ') + r.message.message);\r\n            }\r\n        },\r\n        error: function(r) {\r\n            frappe.msgprint(__('Server call failed.'));\r\n        }\r\n    });\r\n}\r\n\r\nfunction update_items_table(frm) {\r\n    frappe.call({\r\n        method: 'hmh_custom_app.custom_api.encounter.on_submit',\r\n        args: {\r\n            patient_encounter: frm.doc.name\r\n        },\r\n        callback: function(r) {\r\n            if (r.message.status === 'success') {\r\n                frm.set_value('custom_total_amount', r.message.sums.drug_sum);\r\n                frm.set_value('custom_total_investigations', r.message.sums.lab_test_sum);\r\n                frm.set_value('custom_total_clinical_procedures', r.message.sums.procedure_sum);\r\n                frm.set_value('custom_total_therapies', r.message.sums.therapy_sum);\r\n                frm.set_value('custom_total_service_request', r.message.sums.service_sum);\r\n                 frm.save();\r\n                 \r\n            } else {\r\n                frappe.msgprint(__('Error: ') + r.message.message);\r\n            }\r\n        },\r\n        error: function(r) {\r\n            frappe.msgprint(__('Server call failed.'));\r\n        }\r\n    });\r\n}\r\n\r\n\r\n// Function to navigate to the Vital Signs form\r\nfunction viewTriage(frm) {\r\n    // Check if the form object and doc are valid\r\n    console.log(\"Iseee youiyh\")\r\n    if (frm && frm.doc) {\r\n        // Check if custom_vitals_id exists in the doc\r\n        if (frm.doc.custom_vitals_id) {\r\n            // Navigate to the Vital Signs form with the given custom_vitals_id\r\n            frappe.set_route('Form', 'Vital Signs', frm.doc.custom_vitals_id);\r\n        } else {\r\n            // Display a message if custom_vitals_id is not found\r\n            frappe.msgprint(__('No Vitals ID found.'));\r\n        }\r\n    } else {\r\n        // Display an error message if frm or frm.doc is not valid\r\n        frappe.msgprint(__('Form object or document is invalid.'));\r\n    }\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Patient Registration Identification",
  "enabled": 1,
  "modified": "2024-08-07 09:31:57.436721",
  "module": "HMH CUSTOM APP",
  "name": "Customer FIilters",
  "script": "frappe.ui.form.on('Patient Registration Identification', {\r\n    customer_group: function(frm) {\r\n        // Clear the customer field\r\n        frm.set_value('customer', '');\r\n        \r\n        // Set the filter for the customer field based on the selected customer group\r\n        if (frm.doc.customer_group) {\r\n            frm.set_query('customer', function() {\r\n                return {\r\n                    filters: {\r\n                        'customer_group': frm.doc.customer_group\r\n                    }\r\n                };\r\n            });\r\n        } else {\r\n            frm.set_query('customer', function() {\r\n                return {\r\n                    filters: {}\r\n                };\r\n            });\r\n        }\r\n    }\r\n});\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Patient Encounter",
  "enabled": 1,
  "modified": "2024-08-08 14:34:06.406004",
  "module": "HMH CUSTOM APP",
  "name": "Request for vitals",
  "script": "frappe.ui.form.on('Patient Encounter', {\r\n    custom_request_for_another_vitals: function(frm) {\r\n        requestTriage(frm);\r\n    },\r\n});\r\n\r\nfunction requestTriage(frm) {\r\n    // Check if the form object and doc are valid\r\n    if (frm && frm.doc) {\r\n        // Create a new Vital Signs document\r\n        frappe.model.with_doctype('Vital Signs', function() {\r\n            let vital_sign_doc = frappe.model.get_new_doc('Vital Signs');\r\n\r\n            // Set the fields from the Patient Encounter to the new Vital Signs document\r\n            vital_sign_doc.patient = frm.doc.patient;\r\n            vital_sign_doc.patient_name = frm.doc.patient_name;\r\n            vital_sign_doc.custom_practionaer = frm.doc.practitioner;\r\n            vital_sign_doc.custom_encounter_id = frm.doc.name;\r\n            vital_sign_doc.custom_patient_status = 'Doctor\\'s Request';\r\n\r\n            // Insert the new document into the database without routing\r\n            frappe.db.insert(vital_sign_doc).then(function(doc) {\r\n                frappe.msgprint(__('Your Vital Signs Request Sent successfully.'));\r\n            }).catch(function(error) {\r\n                frappe.msgprint(__('Failed to create Vital Signs document.'));\r\n                console.error(error);\r\n            });\r\n        });\r\n    } else {\r\n        // Display an error message if frm or frm.doc is not valid\r\n        frappe.msgprint(__('Form object or document is invalid.'));\r\n    }\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Patient Encounter",
  "enabled": 1,
  "modified": "2024-08-11 17:41:27.790242",
  "module": "HMH CUSTOM APP",
  "name": "Get the amount Prescribed",
  "script": "frappe.ui.form.on('Drug Prescription', {\r\n    period: function(frm, cdt, cdn) {\r\n        var item = frappe.get_doc(cdt, cdn);\r\n\r\n        // Check if the period field has a value\r\n        if (item.period) {\r\n            if (frm.doc.custom_price_list) {\r\n                console.log(\"Price list found:\", frm.doc.custom_price_list);\r\n                frappe.model.set_value(cdt, cdn, 'price_list', frm.doc.custom_price_list);\r\n\r\n                // Call the function to update the amount based on the item selected\r\n                update_item_amount(frm, item, cdt, cdn);\r\n            } else {\r\n                console.log(\"No price list found.\");\r\n            }\r\n        } else {\r\n            console.log(\"Period is not selected.\");\r\n   \r\n        }\r\n    },\r\n    dosage: function(frm, cdt, cdn) {\r\n        var item = frappe.get_doc(cdt, cdn);\r\n\r\n        // Check if the period field has a value\r\n        if (item.period) {\r\n            if (frm.doc.custom_price_list) {\r\n                console.log(\"Price list found:\", frm.doc.custom_price_list);\r\n                frappe.model.set_value(cdt, cdn, 'price_list', frm.doc.custom_price_list);\r\n\r\n                // Call the function to update the amount based on the item selected\r\n                update_item_amount(frm, item, cdt, cdn);\r\n            } else {\r\n                console.log(\"No price list found.\");\r\n            }\r\n        } else {\r\n            console.log(\"Period is not selected.\");\r\n   \r\n        }\r\n    }\r\n});\r\n\r\nfunction update_item_amount(frm, item, cdt, cdn) {\r\n    console.log(\"Calling server method to update amount...\");\r\n    frappe.call({\r\n        method: 'hmh_custom_app.custom_api.drug_priscription.on_submit',\r\n        args: {\r\n            patient_encounter: frm.doc.name,\r\n            selected_drug_code: item.drug_code, // Make sure to pass the selected drug code\r\n            dosage: item.dosage,\r\n            period: item.period,\r\n        },\r\n        callback: function(r) {\r\n            console.log(\"Server response:\", r);\r\n            if (r.message) {\r\n                var selected_item_amount = r.message.selected_item_amount;\r\n                var qty = r.message.qty;\r\n                var rate = r.message.rate;\r\n\r\n                // Set the amount for the current drug_prescription item\r\n                frappe.model.set_value(cdt, cdn, 'custom_amount', selected_item_amount);\r\n                frappe.model.set_value(cdt, cdn, 'custom_qty', qty);\r\n                frappe.model.set_value(cdt, cdn, 'custom_rate', rate);\r\n\r\n                // Optionally, you can also set the rate if needed\r\n                frappe.model.set_value(cdt, cdn, 'rate', item.rate || 0);\r\n\r\n        } else {\r\n                frappe.msgprint(__('Error: ') + (r.message ? r.message.message : 'Unknown error'));\r\n            }\r\n        },\r\n        error: function(r) {\r\n            frappe.msgprint(__('Server call failed.'));\r\n            console.error(\"Server call failed:\", r);\r\n        }\r\n    });\r\n}\r\n",
  "view": "Form"
 },
 {
  "docstatus": 0,
  "doctype": "Client Script",
  "dt": "Patient Encounter",
  "enabled": 1,
  "modified": "2024-08-10 13:02:49.134629",
  "module": "HMH CUSTOM APP",
  "name": "Set Due Date",
  "script": "frappe.ui.form.on('Patient Encounter', {\r\n    encounter_date: function(frm) {\r\n        // Calculate the due date as posting date + 30 days\r\n        var postingDate = new Date(frm.doc.encounter_date);\r\n        postingDate.setDate(postingDate.getDate() + 30);\r\n        \r\n        // Format the date to YYYY-MM-DD\r\n        var dueDate = postingDate.toISOString().split('T')[0];\r\n\r\n        // Set the due date in the form\r\n        frm.set_value('custom_due_date', dueDate);\r\n    }\r\n});\r\n",
  "view": "Form"
 }
]